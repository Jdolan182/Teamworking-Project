import java.util.Observable;

/* Generated by Together */

/**
 * This class holds key control information for the operation of the barrier system.
 * It extends Observable, and notifies its observers whenever either the date changes (caused by the Timer class), or the barrier system activity status changes (caused by an instance of the Campus security class), or the barrier event log changes (caused by an instance of the Barrier class).
 * There will only be one instance of this class.
 * @url element://model:project::PACSUS/design:node:::eefifgkuaa1ev-huf9ga
 * @url element://model:project::PACSUS/design:node:::5jxs2gkua8d5xejfx0s
 * @url element://model:project::PACSUS/design:node:::tgqlgkuaa1ev-8yw95x
 * @url element://model:project::PACSUS/design:node:::iwbcjgkuaa1el-rsvca7
 * @url element://model:project::PACSUS/design:node:::iwbcjgkuaa1el-rsvca7
 * @url element://model:project::PACSUS/design:node:::4y2wmeywsks0c8wxc0x
 * @url element://model:project::PACSUS/design:node:::eefifgkuaa1ev-huf9ga
 * @url element://model:project::PACSUS/design:node:::1fgjegkuaa1ff-qfaks5
 * @url element://model:project::PACSUS/design:node:::dzsadgkua8d67-uwwq6f
 * @url element://model:project::PACSUS/design:node:::gm3o2gkua8d67-iuc3cc
 */
public class System_status extends Observable {
    /**
     * This attribute is the central indication of the activity status of the whole barrier system. It is set/unset by messages from instances of the Campus security class.
     */
    private boolean systemActive = false;

    /**
     * An array of strings showing recent attempts to pass through the barriers (both successful and unsuccessful). The last 20 should be enough? These are intended for display on the Campus_security screens.
     */
    private String[] log = new String[20];

    /**
     * This attribute is kept up to date by the Timer.
     * @clientCardinality 1
     * @supplierCardinality 1 
     * @link aggregation
     * @label Contains
     * @directed
     */
    private Date today;
    private int counter;
    
    public System_status(){
    	
    	today = new Date(1);
    }
    
    
    public void setDate(Date newDay){
    	
    	today = newDay;
    	setChanged();
    	notifyObservers();    

    }
    
    
    public Date getDate(){
    	
    	return today;    	
    }
    
    
    public void deactivate(){
    	
    	systemActive = false;
    	setChanged();
    	notifyObservers();
    }
    
 
    
    public void activate(){
    	
    	systemActive = true;
    	setChanged();
    	notifyObservers();
    }
    
    
    public Boolean getSystemState(){
    	
    	return systemActive;
    }
    
    
    public void addEntry(String reg){
    	
    	int i = counter;
    
    	log[i] = reg;

    	counter++;
    	
    }
    
    
    public String[] getLog(){    
    			
			return log;
			 
    	}
    }

